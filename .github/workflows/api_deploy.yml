on:
  push:
    branches:
      - main
    paths:
      - 'src/DotnetHelp.DevTools.Api/**'
      - 'src/DotnetHelp.DevTools.Api.Cdk/**'
      - 'src/DotnetHelp.DevTools.Api.PreTraffic/**'
      - 'src/DotnetHelp.DevTools.Api.Tests/**'
      - '.github/workflows/api_deploy.yml'

jobs:
    
  test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        name : Checkout

      - uses: actions/setup-dotnet@v3
        name : Install dotnet
        with:
          dotnet-version: 8
      
      - working-directory: ./src
        name: Test API
        run: dotnet test ./DotnetHelp.DevTools.Api.Tests/DotnetHelp.DevTools.Api.Tests.csproj --logger "trx;LogFileName=TestResults.trx" --collect:"XPlat Code Coverage"
  
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:

      - uses: actions/checkout@v4
        name : Checkout

      - working-directory: ./src
        name: Build Docker
        run: docker build . -f ./DotnetHelp.DevTools.Api/Dockerfile -t api_aot_build --output=. --target=final
        
      - working-directory: ./src
        name: Rename Bootstrap
        run: mv ./app/DotnetHelp.DevTools.Api ./app/bootstrap
        
      - name : Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: ./src/app/
  
  build-pre-traffic:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:

      - uses: actions/checkout@v4
        name: Checkout

      - working-directory: ./src
        name: Build Docker
        run: docker build . -f ./DotnetHelp.DevTools.Api.PreTraffic/Dockerfile -t api_pre_traffic_aot_build --output=. --target=final

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pre-traffic
          path: ./src/pre-traffic/bootstrap
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build,build-pre-traffic]
    environment:
      name: production
    permissions:
      contents: read
      id-token: write
    steps:
    
      - uses: actions/checkout@v4
        name : Checkout
        
      - name: Download API Artifacts
        uses: actions/download-artifact@v4
        with:
          name: api
          path: ./src/app/
          
      - name: Download PreTraffic Artifacts
        uses: actions/download-artifact@v4
        with:
          name: pre-traffic
          path: ./src/pre-traffic/

      - uses: actions/setup-node@v4
        name : Install node
        with:
          node-version: 20

      - run: npm install -g aws-cdk
        name : Install CDK

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ secrets.AWS_ROLE }}
            aws-region: eu-west-2
            
      - name : Deploy API
        working-directory: ./src/DotnetHelp.DevTools.Api.Cdk
        run: cdk deploy --require-approval never