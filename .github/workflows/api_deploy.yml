on:
  push:
    branches:
      - main

jobs:
    
  test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        name : Checkout

      - uses: actions/setup-dotnet@v3
        name : Install dotnet
        with:
          dotnet-version: 8
      
      - working-directory: ./src
        name: Test API
        run: dotnet test ./DotnetHelp.DevTools.Api.Tests/DotnetHelp.DevTools.Api.Tests.csproj --logger "trx;LogFileName=TestResults.trx" --collect:"XPlat Code Coverage"
  
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:

      - uses: actions/checkout@v4
        name : Checkout
        
      - uses: docker/setup-buildx-action@v3
        name : Setup Docker

      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
          file: ./src/DotnetHelp.DevTools.Api/Dockerfile
          tags: api_aot_build
          outputs: path=.,target=final

      - working-directory: ./src
        name: Rename Bootstrap
        run: mv ./app/DotnetHelp.DevTools.Api ./app/bootstrap
        
      - name : Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: ./src/app/
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      id-token: write
    steps:
    
      - uses: actions/checkout@v4
        name : Checkout
        
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: api
          path: ./src/app/

      - uses: actions/setup-node@v4
        name : Install node
        with:
          node-version: 20

      - run: npm install -g aws-cdk
        name : Install CDK

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ secrets.AWS_ROLE }}
            aws-region: eu-west-2
            
      - name : Deploy API
        working-directory: ./src/DotnetHelp.DevTools.Cdk
        run: cdk deploy --require-approval never