on:
  push:
    branches:
      - main
    paths:
      - 'src/DotnetHelp.DevTools.Websocket/**'
      - 'src/DotnetHelp.DevTools.Websocket.Cdk/**'
      - 'src/Dotnethelp.DevTools.Websocket.Tests/**'
      - '.github/workflows/websocket_deploy.yml'

jobs:
  
  test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        name : Checkout

      - uses: actions/setup-dotnet@v3
        name : Install dotnet
        with:
          dotnet-version: 8

      - working-directory: ./src
        name: Test API
        run: dotnet test ./Dotnethelp.DevTools.Websocket.Tests/Dotnethelp.DevTools.Websocket.Tests.csproj --logger "trx;LogFileName=TestResults.trx" --collect:"XPlat Code Coverage"
  
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:

      - uses: actions/checkout@v4
        name : Checkout
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - working-directory: ./src
        name: Build Docker
        run: docker build . -f ./DotnetHelp.DevTools.Websocket/Dockerfile -t wss_aot_build --output=. --target=final

      - name : Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wss
          path: ./src/web-socket/bootstrap
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      id-token: write
    steps:
    
      - uses: actions/checkout@v4
        name : Checkout
        
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: wss
          path: ./src/web-socket/

      - uses: actions/setup-node@v4
        name : Install node
        with:
          node-version: 20

      - run: npm install -g aws-cdk
        name : Install CDK

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ secrets.AWS_ROLE }}
            aws-region: eu-west-2
            
      - name : Deploy
        working-directory: ./src/DotnetHelp.DevTools.Websocket.Cdk
        run: cdk deploy --require-approval never