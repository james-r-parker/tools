@page "/base64/decode"
@using DotnetHelp.DevTools.Shared
@inject ApiHttpClient Http
@implements IAsyncDisposable

<PageTitle>Base64 Decode</PageTitle>

<header id="header" class="mb-10 md:flex md:items-start">
	<div class="flex-auto max-w-4xl">
		<p class="mb-4 text-sm leading-6 font-semibold text-sky-500 dark:text-sky-400">
			Base64
		</p>
		<h1 class="text-3xl sm:text-4xl font-extrabold text-slate-900 tracking-tight dark:text-slate-200">
			Base64 Decode
		</h1>
		<p class="mt-4 text-lg text-slate-700 dark:text-slate-400">
			Convert a base64 encoded string into a readable string.
		</p>
	</div>
</header>

<section class="mb-8 relative">

	<label class="block mb-4">
		<span class="block text-gray-700 dark:text-gray-400 mb-2">Input</span>
		<InputTextArea @bind-Value="_request" class="w-full text-sm leading-6 text-slate-400 rounded-md ring-1 ring-slate-900/10 shadow-sm py-1.5 pl-2 pr-3 hover:ring-slate-300 dark:bg-slate-800 dark:highlight-white/5 dark:hover:bg-slate-700" rows="3" placeholder="Enter some text."></InputTextArea>
	</label>

	<div class="flex justify-end">
		<div>
			<button @onclick="OnClick" type="button" class="bg-sky-500 hover:bg-sky-700 px-5 py-2 text-sm leading-5 rounded-full font-semibold text-white">
				Decode
			</button>
		</div>
	</div>


</section>

@if (_response is not null)
{
	<section class="mb-8 relative">

		<span class="block text-gray-700 dark:text-gray-400 mb-2">Result</span>

		<div class="not-prose relative bg-slate-50 rounded-xl overflow-hidden dark:bg-slate-800/25">
			<div style="background-position:10px 10px" class="absolute inset-0 bg-grid-slate-100 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-slate-700/25 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-auto p-8">
				<div class="space-y-8">
					<div>
						<div class="max-w-prose text-sm font-medium text-slate-900 dark:text-slate-200">
							<p>@_response?.Response</p>
						</div>
					</div>
				</div>
			</div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl dark:border-white/5"></div>
		</div>

	</section>
}


@code {
	private string? _request;
	private TextApiResponse? _response;
	readonly CancellationTokenSource _disposalTokenSource = new();

	protected override Task OnInitializedAsync()
	{
		return Task.CompletedTask;
	}

	public async ValueTask DisposeAsync()
	{
		await _disposalTokenSource.CancelAsync();
	}

	private async Task OnClick()
	{
		if (!string.IsNullOrWhiteSpace(_request))
		{
			_response = await Http.Base64Decode(new TextApiRequest(_request), _disposalTokenSource.Token);
			StateHasChanged();
		}
	}
}