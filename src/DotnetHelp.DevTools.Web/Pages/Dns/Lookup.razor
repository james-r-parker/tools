@page "/dns/lookup"
@using DotnetHelp.DevTools.Shared
@inject ApiHttpClient Http
@implements IAsyncDisposable

<PageTitle>Dns Lookup</PageTitle>

<DnhHeader Title="Dns"
		   SubTitle="Dns Lookup"
		   Details=@(new List<string> {
		   $"Lookup Dns records for a given domain"
		   }) />

<DnhSection>
	<DnhForm OnSubmit="OnSubmit" Text="Lookup">
		<DnhTextBox Label="Domain" @bind-Value="_request" />
	</DnhForm>
</DnhSection>

@if (_loading)
{
	<DnhLoading />
}
else if (_data is not null)
{
	<DnhSection Title="Result">
		<DnhResult>
			<DnhKvpCollection Items="_data" />
		</DnhResult>
	</DnhSection>
}


@code {
	private bool _loading = false;
	private string? _request;
	private IReadOnlyCollection<KeyValuePair<string, string>>? _data;
	private readonly CancellationTokenSource _disposalTokenSource = new();

	public async ValueTask DisposeAsync()
	{
		await _disposalTokenSource.CancelAsync();
	}

	private async Task OnSubmit()
	{
		_data = null;
		if (!string.IsNullOrWhiteSpace(_request))
		{
			_loading = true;
			DnsLookupResponses? response = await Http.DnsLookup(_request, _disposalTokenSource.Token);

			if (response is not null)
			{
				_data = response?.Responses?
					.Select(x => new KeyValuePair<string, string>(x.Type, x.Address))
					.ToList();
			}

			_loading = false;
			StateHasChanged();
		}
	}
}