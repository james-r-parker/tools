@page "/encoding/base64/encode"
@inject IJSRuntime JSRuntime
@using Encoding = System.Text.Encoding

<PageTitle>Base64 Encode</PageTitle>

<DnhHeader Title="Encoding"
			SubTitle="Base64 Encode"
			Details=@(new List<string> {
			$"Convert a string into a base64 encoded string."
			}) />

<DnhSection>
	<DnhForm OnSubmit="OnSubmit" Text="Encode">
		<DnhTextArea Label="Input" @bind-Value="_request" @ref="_focusElement" />
	</DnhForm>
</DnhSection>

@if (_response is not null)
{
	<DnhSection Title="Result">

		<DnhResult OnCopy="OnCopy">
			<p>@_response</p>
		</DnhResult>

	</DnhSection>
}


@code {
	private DnhTextArea? _focusElement;
	private string? _request;
	private string? _response;
	
	private void OnSubmit()
	{
		if (!string.IsNullOrWhiteSpace(_request))
		{
			_response = Convert.ToBase64String(Encoding.UTF8.GetBytes(_request));
			StateHasChanged();
		}
	}

	private async Task OnCopy()
	{
		if (_response is not null)
		{
			await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", _response);
		}
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender && _focusElement is not null)
		{
			await _focusElement.Element.FocusAsync();
		}
	}
}