@page "/http/send"
@inject ApiHttpClient ApiClient
@implements IAsyncDisposable

<DnhHeader Title="Http"
		   SubTitle="Send a HTTP request"
		   Details=@(new List<string> {
		   $"Send a HTTP request and receive the headers and body of the response."
		   }) />

<DnhSection>
	<DnhForm OnSubmit="OnSubmit" Text="Send">
		<DnhTextBox Label="Url" @bind-Value="_url" />
		<DnhSelect Label="Method" @bind-Value="_method">
			<option>GET</option>
			<option>HEAD</option>
			<option>POST</option>
			<option>PUT</option>
			<option>DELETE</option>
		</DnhSelect>
		<div class="flex gap-4 items-end">
			<DnhTextBox Label="Key" @bind-Value="_headerKey" />
			<DnhTextBox Label="Value" @bind-Value="_headerValue" />
			<div>
				<DnhButton OnClick="OnAddHeader">
					Add
				</DnhButton>
			</div>
		</div>
		@if (_headers.Count > 0)
		{
			<div class="divide-y divide-slate-700">
				@foreach (var header in _headers)
				{
					<div class="flex py-2 items-center">
						<div class="flex-grow">
							<DnhKvp Name="@header.Key" Value="@header.Value" />
						</div>
						<DnhButton OnClick="() => OnRemoveHeader(header)">
							Remove
						</DnhButton>
					</div>
				}
			</div>
		}
		<DnhTextArea Label="Body" @bind-Value="_body" />
	</DnhForm>
</DnhSection>


@if (_loading)
{
	<DnhLoading />
}
else if (_response is not null)
{
	<DnhSection>
		<DnhResult>
			<DnhKvp Name="Status" Value="@_response.StatusCode" />
			<DnhTitle>Headers</DnhTitle>
			<DnhKvpCollection Items="@_response.Headers" />
			@if (!string.IsNullOrWhiteSpace(_response.Body))
			{
				<DnhTitle>Body</DnhTitle>
				<pre class="text-wrap break-all">@_response.Body</pre>
			}
		</DnhResult>
	</DnhSection>
}

@code {
	private readonly CancellationTokenSource _disposalTokenSource = new();
	private string _url = "";
	private string _body = "";
	private string _method = "GET";
	private string _headerKey = "";
	private string _headerValue = "";
	private IList<KeyValuePair<string, string>> _headers = new List<KeyValuePair<string, string>>();
	private OutgoingHttpResponse? _response;
	private bool _loading;

	private void OnAddHeader()
	{
		if (!string.IsNullOrWhiteSpace(_headerKey) && !string.IsNullOrWhiteSpace(_headerValue))
		{
			_headers.Add(new KeyValuePair<string, string>(_headerKey, _headerValue));
		}
	}

	private void OnRemoveHeader(KeyValuePair<string, string> header)
	{
		_headers.Remove(header);
	}

	private async Task OnSubmit()
	{
		_response = null;
		try
		{
			_loading = true;
			var request = new OutgoingHttpRequest(_url, _method, _headers.ToDictionary(x => x.Key, x => x.Value), _body);
			_response = await ApiClient.SendHttpRequest(request, _disposalTokenSource.Token);
		}
		catch
		{
		}
		finally
		{
			_loading = false;
		}
	}

	public async ValueTask DisposeAsync()
	{
		await _disposalTokenSource.CancelAsync();
	}
}
